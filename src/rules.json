{
  "rules": {
    "subprocess-run": {
      "name": "subprocess-run",
      "description": "Using input() in subprocess.run() to spawn new process",
      "recommendation": "Do not use user input in subprocess.run() or sanitize it",
      "patterns": {
        "pattern1": "subprocess.run\\([a-zA-Z0-9_\\\"\\'+\\-*/%& ]*\\)",
        "pattern2": "subprocess.run\\(input\\(\\)\\)",
        "pattern3": "subprocess.run\\([a-zA-Z0-9_\\\"\\'+\\-*/%& ]*input\\(\\)\\)",
        "pattern4": "subprocess.run\\(input\\(\\)[a-zA-Z0-9_\\\"\\'+\\-*/%& ]*\\)",
        "pattern5": "subprocess.run\\([a-zA-Z0-9_\\\"\\'+\\-*/%& ]*input\\(\\)[a-zA-Z0-9_\\\"\\'+\\-*/%& ]*\\)",
        "pattern6": "run\\([a-zA-Z0-9_\\\"\\'+\\-*/%& ]*\\)",
        "pattern7": "run\\(input\\(\\)\\)",
        "pattern8": "run\\([a-zA-Z0-9_\\\"\\'+\\-*/%& ]*input\\(\\)\\)",
        "pattern9": "run\\(input\\(\\)[a-zA-Z0-9_\\\"\\'+\\-*/%& ]*\\)",
        "pattern10": "run\\([a-zA-Z0-9_\\\"\\'+\\-*/%& ]*input\\(\\)[a-zA-Z0-9_\\\"\\'+\\-*/%& ]*\\)"
      },
      "regex-patterns": {
        "pattern1": "((Call\\(func=Name\\(id='run',).*(right=Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern2": "((Call\\(func=Name\\(id='run',).*(args=[Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern3": "((Call\\(func=Name\\(id='run',).*(func=Name\\(id='input',))",
        "pattern4": "((Call\\(func=.*\\(id='subprocess',.*attr='run'.*).*(id='input',))",
        "pattern5": "((Call\\(func=.*\\(id='subprocess',.*attr='run'.*).*(id='[a-zA-Z0-9_]*',))"
      }
    },
    "subprocess-popen": {
      "name": "subprocess-popen",
      "description": "Using input() in subprocess.Popen() to spawn new process",
      "recommendation": "Do not use user input in subprocess.popen() or sanitize it",
      "regex-patterns": {
        "pattern1": "((Call\\(func=Name\\(id='Popen',).*(right=Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern2": "((Call\\(func=Name\\(id='Popen',).*(args=[Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern3": "((Call\\(func=Name\\(id='Popen',).*(func=Name\\(id='input',))",
        "pattern4": "((Call\\(func=.*\\(id='subprocess',.*attr='Popen'.*).*(id='input',))",
        "pattern5": "((Call\\(func=.*\\(id='subprocess',.*attr='Popen'.*).*(id='[a-zA-Z0-9_]*',))"
      }
    },
    "subprocess-call": {
      "name": "subprocess-call",
      "description": "Using input() in subprocess.call() to call process",
      "recommendation": "Do not use user input in subprocess.call() or sanitize it",
      "regex-patterns": {
        "pattern1": "((Call\\(func=Name\\(id='call',).*(right=Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern2": "((Call\\(func=Name\\(id='call',).*(args=[Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern3": "((Call\\(func=Name\\(id='call',).*(func=Name\\(id='input',))",
        "pattern4": "((Call\\(func=.*\\(id='subprocess',.*attr='call'.*).*(id='input',))",
        "pattern5": "((Call\\(func=.*\\(id='subprocess',.*attr='call'.*).*(id='[a-zA-Z0-9_]*',))"
      }
    },
    "subprocess-check_call": {
      "name": "subprocess-check_call",
      "description": "Using input() in subprocess.check_call()",
      "recommendation": "Do not use user input in subprocess.check_call() or sanitize it",
      "regex-patterns": {
        "pattern1": "((Call\\(func=Name\\(id='check_call',).*(right=Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern2": "((Call\\(func=Name\\(id='check_call',).*(args=[Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern3": "((Call\\(func=Name\\(id='check_call',).*(func=Name\\(id='input',))",
        "pattern4": "((Call\\(func=.*\\(id='subprocess',.*attr='check_call'.*).*(id='input',))",
        "pattern5": "((Call\\(func=.*\\(id='subprocess',.*attr='check_call'.*).*(id='[a-zA-Z0-9_]*',))"
      }
    },
    "subprocess-check_output": {
      "name": "subprocess-check_output",
      "description": "Using input() in subprocess.check_output()",
      "recommendation": "Do not use user input in subprocess.check_output() or sanitize it",
      "regex-patterns": {
        "pattern1": "((Call\\(func=Name\\(id='check_output',).*(right=Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern2": "((Call\\(func=Name\\(id='check_output',).*(args=[Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern3": "((Call\\(func=Name\\(id='check_output',).*(func=Name\\(id='input',))",
        "pattern4": "((Call\\(func=.*\\(id='subprocess',.*attr='check_output'.*).*(id='input',))",
        "pattern5": "((Call\\(func=.*\\(id='subprocess',.*attr='check_output'.*).*(id='[a-zA-Z0-9_]*',))"
      }
    },
    "shell-true": {
      "name": "shell-true",
      "description": "Using shell=True in any module to use shell to execute commands",
      "recommendation": "Do not use shell to execute commands, it's vulnerable",
      "regex-patterns": {
        "pattern1": "keywords=\\[keyword\\(arg='shell', value=Constant\\(value=True\\)\\)\\]\\)\\]\\)\\)"
      }
    },
    "os-system-popen": {
      "name": "os-system-popen",
      "description": "Using input() in os.system() or os.popen()",
      "recommendation": "Do not use input() or sanitize it",
      "regex-patterns": {
        "pattern1": "((Call\\(func=Name\\(id='system',).*(right=Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern2": "((Call\\(func=Name\\(id='system',).*(args=[Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern3": "((Call\\(func=Name\\(id='system',).*(func=Name\\(id='input',))",
        "pattern4": "((Call\\(func=.*\\(id='os',.*attr='system'.*).*(id='input',))",
        "pattern5": "((Call\\(func=.*\\(id='os',.*attr='system'.*).*(id='[a-zA-Z0-9_]*',))",
        "pattern6": "((Call\\(func=Name\\(id='popen',).*(right=Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern7": "((Call\\(func=Name\\(id='popen',).*(args=[Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern8": "((Call\\(func=Name\\(id='popen',).*(func=Name\\(id='input',))",
        "pattern9": "((Call\\(func=.*\\(id='os',.*attr='popen'.*).*(id='input',))",
        "pattern10": "((Call\\(func=.*\\(id='os',.*attr='popen'.*).*(id='[a-zA-Z0-9_]*',))"
      }
    },
    "asyncio-subprocess_exec": {
      "name": "asyncio-subprocess_exec",
      "description": "Using input() in method subprocess_exec()",
      "recommendation": "Do not use input() or sanitize it",
      "regex-patterns": {
        "pattern1": "((Call\\(func=Name\\(id='subprocess_exec',).*(right=Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern2": "((Call\\(func=Name\\(id='subprocess_exec',).*(args=[Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern3": "((Call\\(func=Name\\(id='subprocess_exec',).*(func=Name\\(id='input',))",
        "pattern4": "((Call\\(func=.*\\(id='asyncio',.*attr='subprocess_exec'.*).*(id='input',))",
        "pattern5": "((Call\\(func=.*\\(id='asyncio',.*attr='subprocess_exec'.*).*(id='[a-zA-Z0-9_]*',))"
      }
    },
    "asyncio-create_subprocess_exec": {
      "name": "asyncio-create_subprocess_exec",
      "description": "Using input() in asyncio.subprocess.create_subprocess_exec()",
      "recommendation": "Do not use input() or sanitize it",
      "regex-patterns": {
        "pattern1": "((Call\\(func=Name\\(.*='create_subprocess_exec',).*(right=Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern2": "((Call\\(func=Name\\(.*='create_subprocess_exec',).*(args=[Name\\(id='[a-zA-Z0-9_]*',))",
        "pattern3": "((Call\\(func=Name\\(.*='create_subprocess_exec',).*(func=Name\\(id='input',))",
        "pattern4": "((Call\\(func=.*\\(id='subprocess',.*attr='create_subprocess_exec'.*).*(id='input',))",
        "pattern5": "((Call\\(func=.*\\(id='subprocess',.*attr='create_subprocess_exec'.*).*(id='[a-zA-Z0-9_]*',))"
      }
    }
  }
}